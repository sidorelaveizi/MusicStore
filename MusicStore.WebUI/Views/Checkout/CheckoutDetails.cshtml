@model MusicStore.Domain.Entities.Order


@using MusicStore.Domain.Entities
@{
    ViewBag.Title = "Checkout Complete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<h2>Check Out Shopping Cart</h2>

<h5> Order details:</h5>
@if (Session["cart"] != null)
{
    <div class="table-responsive">
        <table class="table table-responsive table-bordered">
            <thead class="thead-light">
                <tr>
                    <th>
                        Product
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th>
                        Subtotal
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    int Total = 0;
                }
                @foreach (CartLine item in (List<CartLine>)Session["cart"])
                {
                    decimal lineTotal = item.Quantity * item.Album.Price;
                    Total = Convert.ToInt32(Total + lineTotal);
                    Session["SesTotal"] = Total;

                    <tr>
                        <td>
                            @item.Album.Title
                        </td>
                        <td>
                            $@item.Album.Price
                        </td>
                        <td>@item.Quantity</td>
                        <td>
                            $@lineTotal
                        </td>
                    </tr>
                }
                <tr>
                    <td id="cart-total" colspan="4" class="text-right">
                        @{
                            List<CartLine> cart = (List<CartLine>)Session["cart"];
                            var total = cart.Sum(a => a.Album.Price * a.Quantity);
                        }
                        <b>Total: $@total</b>

                    </td>
                </tr>

            </tbody>
        </table>
    </div>
}
else
{
    <h4>No item in your cart!</h4>
}

<br />

@using (Html.BeginForm("ProcessOrder", "Checkout", FormMethod.Post, new { id = "product-form" }))
{
    @Html.ValidationSummary(true)
    <h2>Address And Payment</h2>
    @Html.AntiForgeryToken()
<fieldset>
    <legend>Shipping Information</legend>
    @Html.HiddenFor(x => x.UserId)
    <div class="form-group">
        <label>First Name</label>
        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.FirstName)
    </div>
    <div class="form-group">
        <label>Last Name</label>
        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.LastName)
    </div>
    <div class="form-group">
        <label>Address</label>
        @Html.TextBoxFor(x => x.Address, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Address)
    </div>
    <div class="form-group">
        <label>City</label>
        @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.City)
    </div>
    <div class="form-group">
        <label>State</label>
        @Html.TextBoxFor(x => x.State, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.State)
    </div>
    <div class="form-group">
        <label>Postal Code</label>
        @Html.TextBoxFor(x => x.PostalCode, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.PostalCode)
    </div>
    <div class="form-group">
        <label>Country</label>
        @Html.TextBoxFor(x => x.Country, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Country)
    </div>
    <div class="form-group">
        <label>Phone</label>
        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Phone)
    </div>
    <div class="form-group">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Email)
    </div>
</fieldset>

    <fieldset>
        <legend>Payment</legend>
        <p>
            We're running a promotion: all music is free
            with the promo code: "FREE"
        </p>
        <div class="editor-label">
            @Html.Label("Promo Code")
        </div>
        <div class="editor-field">
            @Html.TextBox("PromoCode")
        </div>
    </fieldset>
    <div id="roleButton">
        <input class="btn btn-primary" type="submit" value="Process Order" />
    </div>
}